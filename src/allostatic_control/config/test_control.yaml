roseco:

  joint_state_controller:
    # The joint state controller handles publishing transforms for any moving joints
    type: "joint_state_controller/JointStateController"
    publish_rate: 10

  roseco_mobile_base_controller:
    type: "diff_drive_controller/DiffDriveController"
    left_wheel: ['left_wheel_joint']
    right_wheel: ['right_wheel_joint']
    publish_rate: 10
    #extra_joints:
    #  - name: <name_of_caster_wheel_joint>
    #    position: 0.01
    #    velocity: 0.0
    #    effort: 0.0
    #  - name: <name_of_caster_wheel_joint>
    #    position: 0.01
    #    velocity: 0.0
    #    effort: 0.0

    # Odometry covariances for the encoder output of the robot. These values should
    # be tuned to your robot's sample odometry data, but these values are a good place
    # to start
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

    cmd_vel_timeout: 0.25
    velocity_rolling_window_size: 2

    # Top level frame (link) of the robot description
    base_frame_id: base_footprint

    # Odometry fused with IMU is published by robot_localization, so
    # no need to publish a TF based on encoders alone.
    enable_odom_tf: true

    # Jetbot hardware does not provides wheel velocities
    estimate_velocity_from_position: true

    # Wheel separation and radius multipliers
    wheel_separation: 0.15
    wheel_radius: 0.03
    wheel_separation_multiplier: 1.0 # default: 1.0
    wheel_radius_multiplier    : 1.0 # default: 1.0

    # Velocity and acceleration limits for the robot
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 0.2  # 0.8m/s
        has_acceleration_limits: true
        max_acceleration       : 0.5 # 1.5m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 0.5  # 2rad/s
        has_acceleration_limits: true
        max_acceleration       : 2.0  # 5rad/s^2
        
